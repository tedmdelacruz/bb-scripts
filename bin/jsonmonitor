#!/bin/bash
# Basic JSON differ 
# Determines if something changed in a static JSON file
# by comparing it to an old JSON file
#
# Usage:
# jsonmonitor target https://target.com/endpoints.json

TARGET=$1
RECON_DIR="$HOME/recon"
TARGET_DIR="$RECON_DIR/$TARGET"
FILE=$2

echo "Fetching $FILE..."

MONITOR_BASE_DIR="$TARGET_DIR/.jsonmonitor"

if [ ! -d $MONITOR_BASE_DIR ]; then
    mkdir $MONITOR_BASE_DIR 
fi;

NEW_FILE="$MONITOR_BASE_DIR/file.new"
NEW_FILE_JSON="$MONITOR_BASE_DIR/file.new.json"
OLD_FILE="$MONITOR_BASE_DIR/file.old"
OLD_FILE_JSON="$MONITOR_BASE_DIR/file.old.json"
DIFF_FILE="$MONITOR_BASE_DIR/json.diff"
now=$(date +%Y-%m-%d_%R)

if [ ! -f $NEW_FILE ]; then
	wget $FILE -O $NEW_FILE 
	cat $NEW_FILE | jq > $NEW_FILE_JSON
	cp $NEW_FILE $OLD_FILE
	cp $NEW_FILE_JSON $OLD_FILE_JSON
else
	rm $DIFF_FILE
	wget $FILE -O $NEW_FILE 
	cat $NEW_FILE | jq > $NEW_FILE_JSON
	diff $NEW_FILE_JSON $OLD_FILE_JSON | tee $DIFF_FILE 
	if [ -s $DIFF_FILE ]; then
		echo "File changes detected in $FILE" | notify -id general
		cp $DIFF_FILE "$MONITOR_BASE_DIR/$now.diff"
	fi;
	cp $NEW_FILE $OLD_FILE
	cp $NEW_FILE_JSON $OLD_FILE_JSON
fi;



