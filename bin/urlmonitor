#!/bin/bash
# Basic URL endpoints monitoring tool
# Monitors if new URLs are introduced in the JS files of a site
# * Requires getJS, linkfinder, and anew to run
#
# Usage:
# urlmonitor mytarget myidentifier https://target.com/
#
# Extended usage: set this as an hourly cron task

TARGET=$1
IDENTIFIER=$2
RECON_DIR="$HOME/recon"
TARGET_DIR="$RECON_DIR/$TARGET"
SITE=$3

echo "Fetching URLs from $SITE..."

MONITOR_BASE_DIR="$TARGET_DIR/.urlmonitor"
if [ ! -d $MONITOR_BASE_DIR ]; then
    mkdir $MONITOR_BASE_DIR 
fi;

IDENTIFIER_BASE_DIR="$MONITOR_BASE_DIR/$IDENTIFIER"
JS_FILES_DIR="$IDENTIFIER_BASE_DIR/.urlmonitor_files"
if [ ! -d $IDENTIFIER_BASE_DIR ]; then
    mkdir $IDENTIFIER_BASE_DIR 
fi;

# Fetch JS files from site
echo $IDENTIFIER_BASE_DIR
getJS --insecure --url $SITE | wget -P $JS_FILES_DIR -i - 

# Get absolute and relative URLs found in the JS files
# and pipe them into urls.txt
NEW_URLS="$IDENTIFIER_BASE_DIR/urls.new"
python3 ~/tools/linkfinder/linkfinder.py -i "$JS_FILES_DIR/*" -o cli | sort -u | tee $NEW_URLS 

# Compare the new URLs against the previous results of urlmonitor
DIFF_URLS="$IDENTIFIER_BASE_DIR/urls.diff"
KNOWN_URLS="$IDENTIFIER_BASE_DIR/urls.known"
if [ -f $KNOWN_URLS ]; then
	cat $NEW_URLS | anew $KNOWN_URLS > $DIFF_URLS
	if [ -s $DIFF_URLS ]; then
		echo "New URLs detected in $SITE at $TARGET/$IDENTIFIER" | notify -id urlmonitor
		now=$(date +%Y-%m-%d_%R)
		cp $DIFF_URLS "$IDENTIFIER_BASE_DIR/$now.diff"
	fi;
	else
	cp $NEW_URLS $KNOWN_URLS
fi;
